{
  "claudeInstructions": "# VoiceDemo Project Guidelines\n\nThis is a Python project using pyproject.toml for configuration.\n\n## Project Structure\n- main.py: Main application entry point\n- pyproject.toml: Python project configuration\n- Makefile: Build and check commands\n\n## Using Gemini CLI for Large Analysis\n\nFor analyzing the entire codebase or multiple files:\n```bash\ngemini -p \"@./ Analyze this voice memo demo project architecture\"\ngemini -p \"@main.py @pyproject.toml Check if all dependencies are properly used\"\n```\n\n## Development Workflow\n1. Always run `make format` before committing\n2. Ensure `make check` passes\n3. Use type hints for all Python functions\n4. Follow PEP 8 style guidelines",
  
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/format-and-check.sh",
            "timeout": 30
          },
          {
            "type": "command",
            "command": ".claude/hooks/review-python.sh",
            "timeout": 20
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "bash -c 'if make -n check >/dev/null 2>&1 && ! make check >/dev/null 2>&1; then echo \"❌ Cannot modify files: make check is currently failing. Fix existing issues first.\" >&2; exit 2; fi'",
            "timeout": 10
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "bash -c 'echo \"📋 Project: voicememo-demo | Python 🐍 | Current directory: $(pwd)\"'"
          }
        ]
      }
    ]
  }
}
